% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_calibration.R
\name{calibrate_DDS}
\alias{calibrate_DDS}
\title{Calibrate DDS}
\usage{
calibrate_DDS(
  params_df,
  objective_function,
  ...,
  r = 0.2,
  m = 10,
  best_only = TRUE,
  print_progress = "none",
  save_path = NULL
)
}
\arguments{
\item{params_df}{A data.frame containing parameterinfo (see details)}

\item{objective_function}{Objective function to be minimized (see details)}

\item{...}{Additional inputs to \code{objective_function}}

\item{r}{Variables are updated with a normal distribution and sd = r * N(1,0)}

\item{m}{Number of iterations over which to calibrate}

\item{best_only}{Boolean, indicates whether to filter output (see Return)}

\item{print_progress}{Either \code{"none"}, \code{"bar"} for txtProgressBar, or \code{"iter"} to print iteration}

\item{save_path}{If used, path to directory to save output as "calibrate_dds_outcomes.csv"}
}
\value{
Returns a \code{tibble} with parameter values for each calibration step. If
\code{best_only} is \code{TRUE}, only rows where the calibration improved
are returned.
}
\description{
Calibrate via dynamically dimensioned search (DDS)
}
\details{
This function executes the Dynamically dimensioned search algorithm
by Tolson and Shoemaker (2007), which uses a random approach to variable
selection and updates for calibration purposes. A random selection of
parameters are varied for each calibration step. At the beginning of the
algorithm, most parameters are varied whereas when the algorithm approaches
the upper bound, fewer parameters are updated.

Input \code{param_df} contains the necessary information to run the DDS
calibration algorithm. It contains columns:
\itemize{
\item \code{param_name}
\item \code{min}
\item \code{max}
\item \code{values}: Initial values for calibration
}
The \code{objective_function} should take as inputs a data.frame containing
columns for \code{param_names}, which identify the parameters and
\code{values}, which contain the updated values. Additional arguments will
be passed through \code{...} and the \code{data.frame} will contain
all of the original columns.

Note that only parameters with \code{params_df$max > params_df$min} will be
calibrated, meaning that it is possible to inclue parameters that will be
skipped by the algorithm.

Tolson, B.A. and Shoemaker, C.A., 2007. Dynamically dimensioned search
algorithm for computationally efficient watershed model calibration. Water
Resources Research, 43(1).
}
\examples{
library(tibble)
# note: calibrate x, y, z. parameter n is not calibrated as min == max
params_df <- tibble(param_names = c("x","y","z","n"),
                    values = c(1.1, 1.2, 3.4, 4.1),
                    min = c(0.5, 1, 2.5, 4.1), max = c(1.5, 3, 3.5, 4.1))
example_objective_function <- function(params_df, vals) {
  return(1 - get_NSE(params_df$values, vals))
}
example_objective_function(params_df, vals = 1:4)

set.seed(100)
dds_output <- calibrate_DDS(params_df, example_objective_function, vals = 1:4, m = 100)
View(dds_output)
}
